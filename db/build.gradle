plugins {
    id 'java-library'
    id 'org.liquibase.gradle' version '2.2.0'
}

group = 'pl.ztp.flashcards'
version = '0.0.1-SNAPSHOT'
description = 'db'


java {
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

repositories {
    mavenLocal()
    maven {
        url = uri('https://repo.maven.apache.org/maven2/')
    }
}

dependencies {
    liquibaseRuntime 'info.picocli:picocli:4.6.3'
    liquibaseRuntime 'org.liquibase:liquibase-core:4.24.0'
    liquibaseRuntime 'org.liquibase:liquibase-groovy-dsl:3.0.3'
    liquibaseRuntime 'org.postgresql:postgresql:42.6.0'
}
apply plugin: "org.liquibase.gradle"

def buildProfile = System.properties['profile']
Properties liquibaseProps = new Properties()

if (Objects.nonNull(buildProfile)) {
    File file = file("src/main/resources/liquibase_" + buildProfile + ".properties") as File;

    if (file.exists()) {
        liquibaseProps.load(new FileInputStream(file))
        logger.quiet("Loaded profile: {}", buildProfile)
    } else {
        throw new GradleException("Profile: " + buildProfile + " not exists!")
    }

} else {
    liquibaseProps.load(new FileInputStream(file("src/main/resources/liquibase.properties") as File))
    logger.quiet("Loaded default profile")
}


liquibase {
    activities {
        main {
            classpath 'src/main/resources'
            changelogFile 'changelog/db.changelog.xml'
            url liquibaseProps.getProperty('url')
            username liquibaseProps.getProperty('username')
            password liquibaseProps.getProperty('password')
            driver liquibaseProps.getProperty('driver')
            duplicateFileMode liquibaseProps.getProperty('liquibase.duplicateFileMode')
            logLevel liquibaseProps.getProperty('log-level')
        }
    }
}

